version: 2
jobs:
  build:
    working_directory: ~/project # this entire string is the value of the env var $CIRCLE_WORKING_DIRECTORY
    docker:
      - image: circleci/node:7.10.0-browsers
      # Environment variable for all commands executed in the primary container
        environment:
#          MONGO_BINS: ./
          BYPASS_CI: yes
          FRONT_END_PATH: ../My-MEAN-website-client/dist
          NODE_ENV: test
          CI: yes
          MONGODB_URI: mongodb://localhost/KS
          MONGODB_TESTING_URI: mongodb://localhost/test-db
          JWT_SECRET: faketestjwt
          TWITTER_CONSUMER_KEY: consumerkey
          TWITTER_CONSUMER_SECRET: consumersecret
          TWITTER_CALLBACK_URL: http://127.0.0.1:3000/api/auth/twitter/callback
          TWITTER_PROFILE_URL: https://api.twitter.com/1.1/account/verify_credentials.json?include_email=true
          FACEBOOK_APP_ID: appid
          FACEBOOK_APP_SECRET: appsecret
          FACEBOOK_CALLBACK_URL: http://localhost:3000/api/auth/facebook/callback
          GOOGLE_CLIENT_ID: clientid
          GOOGLE_CLIENT_SECRET: clientsecret
          GOOGLE_CALLBACK_URL: http://localhost:3000/api/auth/google/callback
          GITHUB_CLIENT_ID: clientid
          GITHUB_CLIENT_SECRET: clientsecret
          GITHUB_CALLBACK_URL: http://localhost:3000/api/auth/github/callback
          LINKEDIN_CLIENT_ID: clientid
          LINKEDIN_CLIENT_SECRET: clientsecret
          LINKEDIN_CALLBACK_URL: http://localhost:3000/api/auth/linkedin/callback
          USER_EMAIL: fake@fake.it
          PASS_EMAIL: fakepasswordemail
          RECAPTCHA_PUBLIC: recaptchapublic
          RECAPTCHA_SECRET: recaptchasecret
      - image: circleci/mongo:latest
      - image: sameersbn/redis:latest
    steps:
      - checkout
      - run:
          name: install-mongodb
          command: bash ./.circleci/install-mongodb.sh
      - run:
          name: npm-install-global
          command: sudo npm install -g codeclimate-test-reporter pm2
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm-install
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
         name: pull-server-side-from-github
         command: git clone https://github.com/Ks89/My-MEAN-website-server.git ../My-MEAN-website-server
      - run:
          name: npm-install-server
          command: cd ../My-MEAN-website-server && npm install
          # also try this better approach: npm --prefix ../My-MEAN-website-server/ run prod:start
      - run:
          name: pm2-start-prod-server
          command: cd ../My-MEAN-website-server && npm run e2e:start
      - run:
          name: run-build-dev
          command: npm run build:dev
      - run:
          name: run-build-prod
          command: npm run build:prod
      - run:
          name: run-clean
          command: npm run clean # clean before the real production build
      - run:
          name: run-build-prod-aot
          command: npm run build:prod:aot
      - run:
          name: run-test
          command: npm test
      - run:
          name: npm-run-init-db
          command: npm run init-db
      - run:
          name: run-build-prod-aot-again-for-e2e-testing
          command: npm run build:prod:aot #again because it is used by e2e testing
      - run:
          name: Install Chromedriver latest version
          command: |
            sudo apt-get update
            sudo apt-get install lsb-release
            curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome.deb
            sudo sed -i 's|HERE/chrome"|HERE/chrome" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
            rm google-chrome.deb
      - run:
          name: run-webdriver-update
          command: npm run webdriver:update:ci
      - run:
          name: run-e2e
          command: npm run e2e:ci
      - run:
          name: pm2-stop-prod-server
          command: cd ../My-MEAN-website-server && npm run e2e:stop
      - run:
          name: run-docs
          command: npm run docs
      - run:
          name: run-compodoc
          command: npm run compodoc
      - run:
          name: run-codeclimate
          command: npm run codeclimate
      - run:
          name: run-coveralls
          command: npm run coveralls
